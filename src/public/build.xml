<?xml version="1.0" encoding="utf-8"?>
<project name="Savanna" default=".help">

    <!-- Exclude config files.  Order matters; must be before the import -->
    <target name="-before-init">
       <property name="build.operations">
          exclude
            -file=app/Config.js
       </property>
    </target>

    <!--
    The build-impl.xml file imported here contains the guts of the build process. It is
    a great idea to read that file to understand how the process works, but it is best to
    limit your changes to this file.
    -->
    <import file="${basedir}/.sencha/app/build-impl.xml"/>

    <!--
    The following targets can be provided to inject logic before and/or after key steps
    of the build process:

        The "init-local" target is used to initialize properties that may be personalized
        for the local machine.

            <target name="-before-init-local"/>
            <target name="-after-init-local"/>

        The "clean" target is used to clean build output from the build.dir.

            <target name="-before-clean"/>
            <target name="-after-clean"/>

        The general "init" target is used to initialize all other properties, including
        those provided by Sencha Cmd.

            <target name="-before-init"/>
            <target name="-after-init"/>
        
        The "page" target performs the call to Sencha Cmd to build the 'all-classes.js' file.

            <target name="-before-page"/>
            <target name="-after-page"/>

        The "build" target performs the call to Sencha Cmd to build the application.

            <target name="-before-build"/>
            <target name="-after-build"/>
    -->

    <target name="JSCover-start">
        <java jar="${user.home}/.m2/repository/com/github/tntim96/JSCover/0.3.0/JSCover-0.3.0.jar" fork="true" spawn="true">
            <arg value="-ws"/>
            <arg value="--document-root=public"/>
            <arg value="--report-dir=../target"/>
            <arg value="--no-instrument=ext"/>
            <arg value="--no-instrument=resources"/>
            <arg value="--no-instrument=test"/>
            <arg value="--no-instrument=app/flexpaper"/>
        </java>
        <waitfor maxwait="5" maxwaitunit="second" checkevery="250" checkeveryunit="millisecond" timeoutproperty="failed">
            <http url="http://localhost:8080/jscoverage.html"/>
        </waitfor>
        <fail if="failed"/>
    </target>

    <target name="JSCover-test">
        <exec executable="phantomjs">
            <arg value="src/public/test/lib/run-jscover-jasmine.js"/>
            <arg value="http://localhost:8080/test/SpecRunner.html"/>
        </exec>
    </target>

    <target name="JSCover-stop">
        <get src="http://localhost:8080/stop" dest="target/stop.txt" />
    </target>

    <target name="Savanna-rebase">
        <exec executable="git">
            <arg value="fetch"/>
            <arg value="--progress"/>
            <arg value="--prune"/>
            <arg value="upstream"/>
        </exec>
        <exec executable="git">
            <arg value="rebase"/>
            <arg value="-v"/>
            <arg value="-m"/>
            <arg value="refs/remotes/upstream/master"/>
        </exec>
        <exec executable="git">
            <arg value="rebase"/>
            <arg value="-v"/>
            <arg value="-m"/>
            <arg value="refs/remotes/upstream/MapPrototype"/>
        </exec>
    </target>
</project>
